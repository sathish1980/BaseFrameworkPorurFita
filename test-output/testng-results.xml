<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="2" passed="1" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-05-25T14:32:47 IST" name="Default suite" finished-at="2024-05-25T14:32:56 IST" duration-ms="8785">
    <groups>
    </groups>
    <test started-at="2024-05-25T14:32:47 IST" name="Default test" finished-at="2024-05-25T14:32:56 IST" duration-ms="8785">
      <class name="Testcase.MakeMytripSearch">
        <test-method is-config="true" signature="Launch()[pri:0, instance:Testcase.MakeMytripSearch@22555ebf]" started-at="2024-05-25T14:32:45 IST" name="Launch" finished-at="2024-05-25T14:32:47 IST" duration-ms="1748" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Launch -->
        <test-method is-config="true" signature="EnterURL()[pri:0, instance:Testcase.MakeMytripSearch@22555ebf]" started-at="2024-05-25T14:32:47 IST" name="EnterURL" finished-at="2024-05-25T14:32:49 IST" duration-ms="1884" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EnterURL -->
        <test-method is-config="true" signature="Closepopup()[pri:0, instance:Testcase.MakeMytripSearch@22555ebf]" started-at="2024-05-25T14:32:49 IST" name="Closepopup" finished-at="2024-05-25T14:32:49 IST" duration-ms="344" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Closepopup -->
        <test-method signature="SearchFlightWithValidCountry()[pri:0, instance:Testcase.MakeMytripSearch@22555ebf]" started-at="2024-05-25T14:32:49 IST" name="SearchFlightWithValidCountry" finished-at="2024-05-25T14:32:53 IST" duration-ms="4145" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [NETWORK PROBLEM ] but found [NETWORK PROBLEM]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [NETWORK PROBLEM ] but found [NETWORK PROBLEM]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at Testcase.MakeMytripSearch.SearchFlightWithValidCountry(MakeMytripSearch.java:61)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:228)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:961)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:201)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:819)
at org.testng.TestRunner.run(TestRunner.java:619)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1228)
at org.testng.TestNG.runSuites(TestNG.java:1134)
at org.testng.TestNG.run(TestNG.java:1101)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SearchFlightWithValidCountry -->
        <test-method signature="SameCityErroValidation()[pri:1, instance:Testcase.MakeMytripSearch@22555ebf]" started-at="2024-05-25T14:32:53 IST" name="SameCityErroValidation" finished-at="2024-05-25T14:32:56 IST" duration-ms="2385" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SameCityErroValidation -->
        <test-method is-config="true" signature="WriteInReport(org.testng.ITestResult)[pri:0, instance:Testcase.MakeMytripSearch@22555ebf]" started-at="2024-05-25T14:32:53 IST" name="WriteInReport" finished-at="2024-05-25T14:32:53 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SearchFlightWithValidCountry status=FAILURE method=MakeMytripSearch.SearchFlightWithValidCountry()[pri:0, instance:Testcase.MakeMytripSearch@22555ebf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WriteInReport -->
        <test-method is-config="true" signature="WriteInReport(org.testng.ITestResult)[pri:0, instance:Testcase.MakeMytripSearch@22555ebf]" started-at="2024-05-25T14:32:56 IST" name="WriteInReport" finished-at="2024-05-25T14:32:56 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SameCityErroValidation status=SUCCESS method=MakeMytripSearch.SameCityErroValidation()[pri:1, instance:Testcase.MakeMytripSearch@22555ebf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WriteInReport -->
        <test-method is-config="true" signature="Teardown()[pri:0, instance:Testcase.MakeMytripSearch@22555ebf]" started-at="2024-05-25T14:32:56 IST" name="Teardown" finished-at="2024-05-25T14:32:56 IST" duration-ms="427" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Teardown -->
      </class> <!-- Testcase.MakeMytripSearch -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
